import BaseModel from './BaseModel';
import * as api from '@app/api/testGroup';
import { STATUS_ACTIVE, STATUS_INACTIVE, STATUS_DEPLOYED } from '@app/constants';

export default class TestGroupModel extends BaseModel {

    constructor({ model = {}, token }) {
        super({ model, token, api });
        this.attributes = {
            id: null,
            name: null,
            status: null,
            ...model
        };
        // safe attributes to send for update/create API
        this.safeAttributes = ['name', 'status'];
        // attributes label for display, for active inputs
        // TODO: integrate with validate.js lib for error message
        this.labels = {
            id: 'ID',
            name: 'Name',
            status: 'Status',
            test_status: 'Test Status',
            total_count: 'Total',
            passed_count: 'Passed',
            failed_count: 'Failed',
            pending_count: 'Pending',
            created_at: 'Created At',
            created_by: 'Created By',
            updated_at: 'Updated At',
            updated_by: 'Updated By',
        };
        // check validate.js
        this.rules = {
            name: {
                type: "string",
                presence: { allowEmpty: false },
            },
            status: {
                type: "string",
                presence: { allowEmpty: false },
                inclusion: [STATUS_ACTIVE, STATUS_INACTIVE, STATUS_DEPLOYED],
            },
        };
        // all others options
        this.statusOptions = [
            { value: STATUS_ACTIVE, label: STATUS_ACTIVE },
            { value: STATUS_INACTIVE, label: STATUS_INACTIVE },
            { value: STATUS_DEPLOYED, label: STATUS_DEPLOYED },
        ]
    }

    getIssues() {
        return this.attributes.issues;
    }

}